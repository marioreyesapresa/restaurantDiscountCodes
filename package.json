{
  "scripts": {
    "copy:env:backend:win": "copy DeliverUS-Backend\\.env.example DeliverUS-Backend\\.env",
    "copy:env:backend:bash": "cp DeliverUS-Backend/.env.example DeliverUS-Backend/.env",
    "copy:env:frontend:win": "copy DeliverUS-Frontend-Owner\\.env.example DeliverUS-Frontend-Owner\\.env",
    "copy:env:frontend:bash": "cp DeliverUS-Frontend-Owner/.env.example DeliverUS-Frontend-Owner/.env",
    "copy:env:win": "npm run copy:env:backend:win && npm run copy:env:frontend:win",
    "copy:env:bash": "npm run copy:env:backend:bash && npm run copy:env:frontend:bash",
    "install:backend": "cd DeliverUS-Backend && npm install",
    "install:frontend": "cd DeliverUS-Frontend-Owner && npm install",
    "migrate:backend": "cd DeliverUS-Backend && npx sequelize-cli db:migrate:undo:all && npx sequelize-cli db:migrate && npx sequelize-cli db:seed:all",
    "start:backend": "cd DeliverUS-Backend && nodemon --ignore ./example_api_client/ backend.js",
    "start:backend:docker_debug": "cd DeliverUS-Backend && nodemon --ignore ./example_api_client/ --inspect=0.0.0.0:9229 backend.js",
    "start:frontend": "cd DeliverUS-Frontend-Owner && npx cross-env NODE_OPTIONS=--openssl-legacy-provider expo start",
    "install:all:win": "npm run copy:env:win && npm run install:backend && npm run migrate:backend && npm run install:frontend",
    "install:all:bash": "npm run copy:env:bash && npm run install:backend && npm run migrate:backend && npm run install:frontend",
    "freshStart:frontend:bash": "npm run copy:env:frontend:bash && npm run install:frontend && npm run start:frontend",
    "freshStart:frontend:win": "npm run copy:env:frontend:win && npm run install:frontend && npm run start:frontend",
    "freshStart:all:docker:bash": "docker-compose up -d && npm run freshStart:frontend:bash",
    "freshStart:all:docker:win": "docker-compose up -d && npm run freshStart:frontend:win"
  }
}